name: Terraform Risk (non-blocking)

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  risk-check:
    name: Score TF risk
    runs-on: ubuntu-latest
    # <-- non-mandatory: this job always succeeds
    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure model exists
        run: |
          test -f model/model_pipeline.pkl || { echo "model/model_pipeline.pkl missing. Commit your trained model."; exit 0; }

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pipx install poetry

      - name: Install deps
        run: poetry install --no-interaction --no-root

      - name: Collect changed .tf files from PR
        id: changed
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const files = await github.paginate(github.rest.pulls.listFiles, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              per_page: 100
            });
            const tfs = files
              .filter(f => f.filename.endsWith('.tf') && f.status !== 'removed')
              .map(f => f.filename);
            core.setOutput('files', JSON.stringify(tfs));

      - name: Prepare incoming_tf/ for scoring
        id: stage
        run: |
          python - <<'PY'
          import os, json, pathlib, sys
          files = json.loads(r'''${{ steps.changed.outputs.files }}''') if '${{ steps.changed.outputs.files }}' else []
          os.makedirs('incoming_tf', exist_ok=True)
          for f in files:
              src = pathlib.Path(f)
              if src.exists():
                  dst = pathlib.Path('incoming_tf') / src.name
                  dst.write_text(src.read_text(encoding='utf-8'), encoding='utf-8')
          print(f"Staged {len(files)} TF files for scoring.")
          PY

      - name: Run risk scorer
        id: score
        run: |
          if [ -z "${{ steps.changed.outputs.files }}" ] || [ "${{ steps.changed.outputs.files }}" = "[]" ]; then
            echo "No .tf changes in this PR."
            echo "result<<EOF" >> $GITHUB_OUTPUT
            echo "No .tf files changed in this PR." >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            set +e
            OUT="$(poetry run python main.py || true)"
            echo "$OUT"
            echo "result<<EOF" >> $GITHUB_OUTPUT
            echo "$OUT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Post PR comment (sticky)
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: tf-risk
          message: |
            ### Terraform Risk Check (non-blocking)
            Using committed model at `model/model_pipeline.pkl`.

            ```
            ${{ steps.score.outputs.result }}
            ```

      - name: Add to job summary
        run: |
          {
            echo "### Terraform Risk Check (non-blocking)"
            echo ""
            echo '```'
            echo "${{ steps.score.outputs.result }}"
            echo '```'
          } >> $GITHUB_STEP_SUMMARY
